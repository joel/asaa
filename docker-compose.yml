version: "3.7"

services:
  db:
    image: mysql:5.7.33
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data

  chrome:
    image: selenium/standalone-chrome
    volumes:
     - /dev/shm:/dev/shm

  base: &base
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.ci
      cache_from:
        - base-development-cache
      args:
        ARG_RUBY_VERSION: ${ARG_RUBY_VERSION}
        ARG_BUNDLER_VERSION: ${ARG_BUNDLER_VERSION}
        ARG_APP_PATH: ${ARG_APP_PATH}
        ARG_RUBYGEMS_VERSION: ${ARG_RUBYGEMS_VERSION}
    image: base-development:${VERSION}
    tmpfs:
      - /tmp

  wait-middleware: &wait-middleware
    <<: *base
    environment:
      WAIT_HOSTS: db:3306,redis:6379,chrome:4444
      WAIT_TIMEOUT: 90
      WAIT_HOST_CONNECT_TIMEOUT: 10
      WAIT_BEFORE: 5
      WAIT_AFTER: 5
      WAIT_SLEEP_INTERVAL: 2
    depends_on:
      - db
      - redis
      - chrome
    command: /wait

  backend: &backend
    <<: *base
    stdin_open: true
    tty: true
    environment:
      HUB_URL: http://chrome:4444/wd/hub
    depends_on:
      - db
      - redis

  console:
    <<: *backend
    command: /bin/bash

  capybara:
    <<: *backend
    environment:
      CAPYBARA_SERVER_PORT: ${CAPYBARA_SERVER_PORT}
      CAPYBARA_SERVER_HOST: ${CAPYBARA_SERVER_HOST}
    volumes:
      - type: bind
        source: .
        target: ${ARG_APP_PATH}
        consistency: cached
    ports:
      # Expose the test server port. Fail loudly if CAPYBARA_SERVER_PORT isn't set.
      - "${CAPYBARA_SERVER_PORT}:${CAPYBARA_SERVER_PORT}"
      # Also expose the usual app port
      - "3000:3000"

  chromedriver:
    <<: *backend
    environment:
      SELENIUM_REMOTE_HOST: selenium
    volumes:
      - type: bind
        source: .
        target: ${ARG_APP_PATH}
        consistency: cached
    ports:
      # Expose the test server port. Fail loudly if CAPYBARA_SERVER_PORT isn't set.
      - ${CAPYBARA_SERVER_PORT}:4444
      # Also expose the usual app port
      - "3000:3000"
    command: bin/rails server -p 3000 -b '0.0.0.0'

volumes:
  db-data:
  redis-data: